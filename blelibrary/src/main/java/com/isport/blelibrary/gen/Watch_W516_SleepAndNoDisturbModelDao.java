package com.isport.blelibrary.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.isport.blelibrary.db.table.watch_w516.Watch_W516_SleepAndNoDisturbModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "WATCH__W516__SLEEP_AND_NO_DISTURB_MODEL".
*/
public class Watch_W516_SleepAndNoDisturbModelDao extends AbstractDao<Watch_W516_SleepAndNoDisturbModel, Long> {

    public static final String TABLENAME = "WATCH__W516__SLEEP_AND_NO_DISTURB_MODEL";

    /**
     * Properties of entity Watch_W516_SleepAndNoDisturbModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property UserId = new Property(1, String.class, "userId", false, "USER_ID");
        public final static Property DeviceId = new Property(2, String.class, "deviceId", false, "DEVICE_ID");
        public final static Property AutomaticSleep = new Property(3, boolean.class, "automaticSleep", false, "AUTOMATIC_SLEEP");
        public final static Property SleepRemind = new Property(4, boolean.class, "sleepRemind", false, "SLEEP_REMIND");
        public final static Property OpenNoDisturb = new Property(5, boolean.class, "openNoDisturb", false, "OPEN_NO_DISTURB");
        public final static Property SleepStartTime = new Property(6, String.class, "sleepStartTime", false, "SLEEP_START_TIME");
        public final static Property SleepEndTime = new Property(7, String.class, "sleepEndTime", false, "SLEEP_END_TIME");
        public final static Property NoDisturbStartTime = new Property(8, String.class, "noDisturbStartTime", false, "NO_DISTURB_START_TIME");
        public final static Property NoDisturbEndTime = new Property(9, String.class, "noDisturbEndTime", false, "NO_DISTURB_END_TIME");
    };


    public Watch_W516_SleepAndNoDisturbModelDao(DaoConfig config) {
        super(config);
    }
    
    public Watch_W516_SleepAndNoDisturbModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"WATCH__W516__SLEEP_AND_NO_DISTURB_MODEL\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"USER_ID\" TEXT," + // 1: userId
                "\"DEVICE_ID\" TEXT," + // 2: deviceId
                "\"AUTOMATIC_SLEEP\" INTEGER NOT NULL ," + // 3: automaticSleep
                "\"SLEEP_REMIND\" INTEGER NOT NULL ," + // 4: sleepRemind
                "\"OPEN_NO_DISTURB\" INTEGER NOT NULL ," + // 5: openNoDisturb
                "\"SLEEP_START_TIME\" TEXT," + // 6: sleepStartTime
                "\"SLEEP_END_TIME\" TEXT," + // 7: sleepEndTime
                "\"NO_DISTURB_START_TIME\" TEXT," + // 8: noDisturbStartTime
                "\"NO_DISTURB_END_TIME\" TEXT);"); // 9: noDisturbEndTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"WATCH__W516__SLEEP_AND_NO_DISTURB_MODEL\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Watch_W516_SleepAndNoDisturbModel entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(2, userId);
        }
 
        String deviceId = entity.getDeviceId();
        if (deviceId != null) {
            stmt.bindString(3, deviceId);
        }
        stmt.bindLong(4, entity.getAutomaticSleep() ? 1L: 0L);
        stmt.bindLong(5, entity.getSleepRemind() ? 1L: 0L);
        stmt.bindLong(6, entity.getOpenNoDisturb() ? 1L: 0L);
 
        String sleepStartTime = entity.getSleepStartTime();
        if (sleepStartTime != null) {
            stmt.bindString(7, sleepStartTime);
        }
 
        String sleepEndTime = entity.getSleepEndTime();
        if (sleepEndTime != null) {
            stmt.bindString(8, sleepEndTime);
        }
 
        String noDisturbStartTime = entity.getNoDisturbStartTime();
        if (noDisturbStartTime != null) {
            stmt.bindString(9, noDisturbStartTime);
        }
 
        String noDisturbEndTime = entity.getNoDisturbEndTime();
        if (noDisturbEndTime != null) {
            stmt.bindString(10, noDisturbEndTime);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Watch_W516_SleepAndNoDisturbModel entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(2, userId);
        }
 
        String deviceId = entity.getDeviceId();
        if (deviceId != null) {
            stmt.bindString(3, deviceId);
        }
        stmt.bindLong(4, entity.getAutomaticSleep() ? 1L: 0L);
        stmt.bindLong(5, entity.getSleepRemind() ? 1L: 0L);
        stmt.bindLong(6, entity.getOpenNoDisturb() ? 1L: 0L);
 
        String sleepStartTime = entity.getSleepStartTime();
        if (sleepStartTime != null) {
            stmt.bindString(7, sleepStartTime);
        }
 
        String sleepEndTime = entity.getSleepEndTime();
        if (sleepEndTime != null) {
            stmt.bindString(8, sleepEndTime);
        }
 
        String noDisturbStartTime = entity.getNoDisturbStartTime();
        if (noDisturbStartTime != null) {
            stmt.bindString(9, noDisturbStartTime);
        }
 
        String noDisturbEndTime = entity.getNoDisturbEndTime();
        if (noDisturbEndTime != null) {
            stmt.bindString(10, noDisturbEndTime);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Watch_W516_SleepAndNoDisturbModel readEntity(Cursor cursor, int offset) {
        Watch_W516_SleepAndNoDisturbModel entity = new Watch_W516_SleepAndNoDisturbModel( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // userId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // deviceId
            cursor.getShort(offset + 3) != 0, // automaticSleep
            cursor.getShort(offset + 4) != 0, // sleepRemind
            cursor.getShort(offset + 5) != 0, // openNoDisturb
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // sleepStartTime
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // sleepEndTime
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // noDisturbStartTime
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9) // noDisturbEndTime
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Watch_W516_SleepAndNoDisturbModel entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setUserId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDeviceId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setAutomaticSleep(cursor.getShort(offset + 3) != 0);
        entity.setSleepRemind(cursor.getShort(offset + 4) != 0);
        entity.setOpenNoDisturb(cursor.getShort(offset + 5) != 0);
        entity.setSleepStartTime(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setSleepEndTime(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setNoDisturbStartTime(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setNoDisturbEndTime(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Watch_W516_SleepAndNoDisturbModel entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Watch_W516_SleepAndNoDisturbModel entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
