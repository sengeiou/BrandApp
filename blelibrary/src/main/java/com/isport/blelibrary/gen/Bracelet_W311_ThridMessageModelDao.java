package com.isport.blelibrary.gen;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.isport.blelibrary.db.table.bracelet_w311.Bracelet_W311_ThridMessageModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "BRACELET__W311__THRID_MESSAGE_MODEL".
*/
public class Bracelet_W311_ThridMessageModelDao extends AbstractDao<Bracelet_W311_ThridMessageModel, Long> {

    public static final String TABLENAME = "BRACELET__W311__THRID_MESSAGE_MODEL";

    /**
     * Properties of entity Bracelet_W311_ThridMessageModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property UserId = new Property(1, String.class, "userId", false, "USER_ID");
        public final static Property DeviceId = new Property(2, String.class, "deviceId", false, "DEVICE_ID");
        public final static Property IsWechat = new Property(3, boolean.class, "isWechat", false, "IS_WECHAT");
        public final static Property IsQQ = new Property(4, boolean.class, "isQQ", false, "IS_QQ");
        public final static Property IsWhatApp = new Property(5, boolean.class, "isWhatApp", false, "IS_WHAT_APP");
        public final static Property IsFaceBook = new Property(6, boolean.class, "isFaceBook", false, "IS_FACE_BOOK");
        public final static Property IsTwitter = new Property(7, boolean.class, "isTwitter", false, "IS_TWITTER");
        public final static Property IsSkype = new Property(8, boolean.class, "isSkype", false, "IS_SKYPE");
        public final static Property IsInstagram = new Property(9, boolean.class, "isInstagram", false, "IS_INSTAGRAM");
        public final static Property IsMessage = new Property(10, boolean.class, "isMessage", false, "IS_MESSAGE");
        public final static Property IsLinkedin = new Property(11, boolean.class, "isLinkedin", false, "IS_LINKEDIN");
        public final static Property IsOthers = new Property(12, boolean.class, "isOthers", false, "IS_OTHERS");
        public final static Property Iskakaotalk = new Property(13, boolean.class, "iskakaotalk", false, "ISKAKAOTALK");
        public final static Property IsLine = new Property(14, boolean.class, "isLine", false, "IS_LINE");
    };


    public Bracelet_W311_ThridMessageModelDao(DaoConfig config) {
        super(config);
    }
    
    public Bracelet_W311_ThridMessageModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"BRACELET__W311__THRID_MESSAGE_MODEL\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"USER_ID\" TEXT," + // 1: userId
                "\"DEVICE_ID\" TEXT," + // 2: deviceId
                "\"IS_WECHAT\" INTEGER NOT NULL ," + // 3: isWechat
                "\"IS_QQ\" INTEGER NOT NULL ," + // 4: isQQ
                "\"IS_WHAT_APP\" INTEGER NOT NULL ," + // 5: isWhatApp
                "\"IS_FACE_BOOK\" INTEGER NOT NULL ," + // 6: isFaceBook
                "\"IS_TWITTER\" INTEGER NOT NULL ," + // 7: isTwitter
                "\"IS_SKYPE\" INTEGER NOT NULL ," + // 8: isSkype
                "\"IS_INSTAGRAM\" INTEGER NOT NULL ," + // 9: isInstagram
                "\"IS_MESSAGE\" INTEGER NOT NULL ," + // 10: isMessage
                "\"IS_LINKEDIN\" INTEGER NOT NULL ," + // 11: isLinkedin
                "\"IS_OTHERS\" INTEGER NOT NULL ," + // 12: isOthers
                "\"ISKAKAOTALK\" INTEGER NOT NULL ," + // 13: iskakaotalk
                "\"IS_LINE\" INTEGER NOT NULL );"); // 14: isLine
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"BRACELET__W311__THRID_MESSAGE_MODEL\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Bracelet_W311_ThridMessageModel entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(2, userId);
        }
 
        String deviceId = entity.getDeviceId();
        if (deviceId != null) {
            stmt.bindString(3, deviceId);
        }
        stmt.bindLong(4, entity.getIsWechat() ? 1L: 0L);
        stmt.bindLong(5, entity.getIsQQ() ? 1L: 0L);
        stmt.bindLong(6, entity.getIsWhatApp() ? 1L: 0L);
        stmt.bindLong(7, entity.getIsFaceBook() ? 1L: 0L);
        stmt.bindLong(8, entity.getIsTwitter() ? 1L: 0L);
        stmt.bindLong(9, entity.getIsSkype() ? 1L: 0L);
        stmt.bindLong(10, entity.getIsInstagram() ? 1L: 0L);
        stmt.bindLong(11, entity.getIsMessage() ? 1L: 0L);
        stmt.bindLong(12, entity.getIsLinkedin() ? 1L: 0L);
        stmt.bindLong(13, entity.getIsOthers() ? 1L: 0L);
        stmt.bindLong(14, entity.getIskakaotalk() ? 1L: 0L);
        stmt.bindLong(15, entity.getIsLine() ? 1L: 0L);
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Bracelet_W311_ThridMessageModel entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String userId = entity.getUserId();
        if (userId != null) {
            stmt.bindString(2, userId);
        }
 
        String deviceId = entity.getDeviceId();
        if (deviceId != null) {
            stmt.bindString(3, deviceId);
        }
        stmt.bindLong(4, entity.getIsWechat() ? 1L: 0L);
        stmt.bindLong(5, entity.getIsQQ() ? 1L: 0L);
        stmt.bindLong(6, entity.getIsWhatApp() ? 1L: 0L);
        stmt.bindLong(7, entity.getIsFaceBook() ? 1L: 0L);
        stmt.bindLong(8, entity.getIsTwitter() ? 1L: 0L);
        stmt.bindLong(9, entity.getIsSkype() ? 1L: 0L);
        stmt.bindLong(10, entity.getIsInstagram() ? 1L: 0L);
        stmt.bindLong(11, entity.getIsMessage() ? 1L: 0L);
        stmt.bindLong(12, entity.getIsLinkedin() ? 1L: 0L);
        stmt.bindLong(13, entity.getIsOthers() ? 1L: 0L);
        stmt.bindLong(14, entity.getIskakaotalk() ? 1L: 0L);
        stmt.bindLong(15, entity.getIsLine() ? 1L: 0L);
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Bracelet_W311_ThridMessageModel readEntity(Cursor cursor, int offset) {
        Bracelet_W311_ThridMessageModel entity = new Bracelet_W311_ThridMessageModel( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // userId
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // deviceId
            cursor.getShort(offset + 3) != 0, // isWechat
            cursor.getShort(offset + 4) != 0, // isQQ
            cursor.getShort(offset + 5) != 0, // isWhatApp
            cursor.getShort(offset + 6) != 0, // isFaceBook
            cursor.getShort(offset + 7) != 0, // isTwitter
            cursor.getShort(offset + 8) != 0, // isSkype
            cursor.getShort(offset + 9) != 0, // isInstagram
            cursor.getShort(offset + 10) != 0, // isMessage
            cursor.getShort(offset + 11) != 0, // isLinkedin
            cursor.getShort(offset + 12) != 0, // isOthers
            cursor.getShort(offset + 13) != 0, // iskakaotalk
            cursor.getShort(offset + 14) != 0 // isLine
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Bracelet_W311_ThridMessageModel entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setUserId(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDeviceId(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setIsWechat(cursor.getShort(offset + 3) != 0);
        entity.setIsQQ(cursor.getShort(offset + 4) != 0);
        entity.setIsWhatApp(cursor.getShort(offset + 5) != 0);
        entity.setIsFaceBook(cursor.getShort(offset + 6) != 0);
        entity.setIsTwitter(cursor.getShort(offset + 7) != 0);
        entity.setIsSkype(cursor.getShort(offset + 8) != 0);
        entity.setIsInstagram(cursor.getShort(offset + 9) != 0);
        entity.setIsMessage(cursor.getShort(offset + 10) != 0);
        entity.setIsLinkedin(cursor.getShort(offset + 11) != 0);
        entity.setIsOthers(cursor.getShort(offset + 12) != 0);
        entity.setIskakaotalk(cursor.getShort(offset + 13) != 0);
        entity.setIsLine(cursor.getShort(offset + 14) != 0);
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Bracelet_W311_ThridMessageModel entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Bracelet_W311_ThridMessageModel entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
